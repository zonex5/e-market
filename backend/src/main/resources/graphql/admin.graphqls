type AdmCategory {
    id: ID
    active: Boolean
    translations: [AdmCategoryTranslation]
}

type AdmCategoryTranslation {
    id: Int
    lang: String,
    title: String
}

type AdmProduct {
    id: ID
    active: Boolean
    categoryId: Int
    categoryTitle: String
    title: String #used in list of products
    translations: [AdmProductTranslation]
}

type AdmProductTranslation {
    id: Int
    lang: String
    title: String
    annotation: String
    description: String
}

input AdmTranslationInput {
    id: ID,
    lang: String,
    title: String,
    annotation: String,
    description: String
}

input AdmItemInput {
    id: ID,
    active: Boolean
    translations: [AdmTranslationInput]
}

input AdmProductInput {
    id: ID,
    active: Boolean
    categoryId: Int
    translations: [AdmTranslationInput]
}

extend type Query {
    admAllCategories: [AdmCategory]
    admAllProducts(categoryId: Int, sort: SortInput): [AdmProduct]
    admListCategories: [Category]
}

extend type Mutation {
    admSaveCategory(category: AdmItemInput!): Boolean
    admDeleteCategory(id: Int!): Boolean
    admNewCategory: Boolean
    admDeleteProduct(id: Int!): Boolean
    admNewProduct: Boolean
    admSaveProduct(product: AdmProductInput!): Boolean
}